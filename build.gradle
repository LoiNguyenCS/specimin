
plugins {
    id 'application'
    id 'com.diffplug.spotless' version '6.18.0'
    id 'org.checkerframework' version '0.6.27'
    id("net.ltgt.errorprone") version "2.0.2"
    id 'com.adarshr.test-logger' version '3.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

application {
    mainClass = 'org.checkerframework.specimin.SpeciminRunner'
}

dependencies {

    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.23.1'

    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'

    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    errorprone("com.google.errorprone:error_prone_core:2.10.0")
}

// Use require-javadoc. From https://github.com/plume-lib/require-javadoc.
configurations {
    requireJavadoc
}
dependencies {
    requireJavadoc "org.plumelib:require-javadoc:1.0.2"
}
task requireJavadoc(type: JavaExec) {
    group = 'Documentation'
    description = 'Ensures that Javadoc documentation exists.'
    mainClass = "org.plumelib.javadoc.RequireJavadoc"
    classpath = configurations.requireJavadoc
    args "src/main/java"
}

checkerFramework {
    checkers = [
            'org.checkerframework.checker.nullness.NullnessChecker',
            'org.checkerframework.checker.resourceleak.ResourceLeakChecker',
            'org.checkerframework.checker.interning.InterningChecker',
            'org.checkerframework.checker.signature.SignatureChecker'
    ]
    excludeTests = true

    extraJavacArgs = [
            '-Astubs=JavaParser.astub'
    ]
}

spotless {
    // optional: limit format enforcement to just the files changed by this feature branch
    ratchetFrom 'origin/main'

    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        googleJavaFormat().reflowLongStrings()
        formatAnnotations()
    }
}

compileJava.dependsOn 'spotlessApply'
check.dependsOn requireJavadoc
